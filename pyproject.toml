[tool.black]
line-length = 119
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
skip-string-normalization = true

[tool.coverage.run]
branch = true
omit = ["tests/"]
source = ["teststack"]

[tool.coverage.paths]
source = ["src", ".tox/*/lib/*site-packages"]

[tool.coverage.report]
skip_covered = false

[tool.coverage.xml]
output = "coverage.xml"

[tool.pytest.ini_options]
addopts = "-ra"
log_cli_level = "critical"
junit_family = "xunit2"
testpaths = "tests/"
norecursedirs = ".git .tox tests/testapp"

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py310,py311,py312,py313,syntax,report
skip_missing_interpreters = true
isolated_build = True

# Keep docs in sync with docs env and .readthedocs.yml.
[gh-actions]
python =
    3.10: py310, report
    3.11: py311, report
    3.12: py312, report
    3.13: py313, report

[testenv]
extras = tests, typing
setenv =
    COVERAGE_FILE=.coverage.{envname}
passenv = DOCKER_TLS_VERIFY, DOCKER_HOST, DOCKER_CERT_PATH
commands =
    coverage run -m pytest -v {posargs}

[testenv:report]
setenv =
    COVERAGE_FILE=
skip_install = true
deps = coverage[toml]>=5.4
commands =
    coverage combine
    coverage report
    coverage html
    coverage xml

[testenv:syntax]
skip_install = true
deps = black
commands = black --check --diff --skip-string-normalization .

[testenv:typing]
skip_instal = true
deps = mypy
commands = mypy src
"""

[project]
name = "teststack"
description = "Manage the infrastructure for running tests against"
readme = "README.rst"
authors = [
    { name = "Daniel Wallace", email = "daniel@gtmanfred.com" }
]
license = { text = "APACHE-2.0" }
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Testing",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12"
]
requires-python = ">=3.8"
dependencies = [
    "docker",
    "six",  # needed by docker
    "click",
    "click-log",
    "toml",
    "jinja2",
    "GitPython",
    "backports.entry-points-selectable",
    "packaging"
]
dynamic = ["version"]

[project.optional-dependencies]
typing = [
    "mypy",
    "types-docker",
    "types-toml"
]
tests = [
    "coverage[toml]>=5.4",
    "pytest",
    "pytest-pdb",
    "poetry"
]
syntax = ["black"]
dev = ["tox"]
podman = ["podman"]
docs = ["sphinx", "sphinx-rtd-theme"]

[project.urls]
homepage = "https://github.com/gtmanfred/teststack"
repository = "https://github.com/gtmanfred/teststack"
documentation = "https://teststack.readthedocs.org"

[project.entry-points.console_scripts]
teststack = "teststack:main"

[project.entry-points."teststack.commands"]
containers = "teststack.commands.containers"
environment = "teststack.commands.environment"

[project.entry-points."teststack.clients"]
docker = "teststack.containers.docker"
podman = "teststack.containers.podman"

[tool.setuptools]
zip-safe = false

[tool.setuptools.packages.find]
where = ["src"]
namespaces =  true

[tool.setuptools_scm]
write_to = "src/teststack/_version.py"

[build-system]
requires = ["setuptools>=62", "setuptools-scm>=3.4", "wheel"]
build-backend = "setuptools.build_meta"
